{"version":3,"sources":["components/Header.js","components/Movie.js","components/Search.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","className","text","Movie","movie","poster","Poster","Title","width","alt","src","Year","Search","useState","searchValue","setSearchValue","value","onChange","e","target","type","onClick","preventDefault","search","App","loading","setLoading","movies","setMovies","errorMessage","setErrorMessage","useEffect","fetch","then","response","json","jsonResponse","Response","Error","map","index","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8NAUeA,G,MARA,SAACC,GACd,OACE,wBAAQC,UAAU,aAAlB,SACE,6BAAKD,EAAME,WCoBFC,EAnBD,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACTC,EACa,QAAjBD,EAAME,OALR,qGAKuDF,EAAME,OAC7D,OACE,sBAAKL,UAAU,QAAf,UACE,6BAAKG,EAAMG,QACX,8BACE,qBACEC,MAAM,MACNC,IAAG,4BAAuBL,EAAMG,OAChCG,IAAKL,MAGT,kCAAKD,EAAMO,KAAX,WCaSC,EA7BA,SAACZ,GAAW,IAAD,EACca,mBAAS,IADvB,mBACjBC,EADiB,KACJC,EADI,KAiBxB,OACI,uBAAMd,UAAU,SAAhB,UACE,uBACEe,MAAOF,EACPG,SAlByB,SAACC,GAChCH,EAAeG,EAAEC,OAAOH,QAkBlBI,KAAK,SAEP,uBAAOC,QAbc,SAACH,GAC1BA,EAAEI,iBACFtB,EAAMuB,OAAOT,GALbC,EAAe,KAgByBK,KAAK,SAASJ,MAAM,eCoCjDQ,EArDH,WAAO,IAAD,EACcX,oBAAS,GADvB,mBACTY,EADS,KACAC,EADA,OAEYb,mBAAS,IAFrB,mBAETc,EAFS,KAEDC,EAFC,OAGwBf,mBAAS,MAHjC,mBAGTgB,EAHS,KAGKC,EAHL,KAKdC,qBAAU,WACVC,MATkB,kDAUfC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJR,EAAUQ,EAAaxB,QACvBc,GAAW,QAEd,IAoBD,OACC,sBAAKzB,UAAU,MAAf,UACC,cAAC,EAAD,CAAQC,KAAK,iCACb,cAAC,EAAD,CAAQqB,OArBK,SAAAT,GACfY,GAAW,GACXI,EAAgB,MAEhBE,MAAM,8BAAD,OAA+BlB,EAA/B,qBACFmB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAC0B,SAA1BA,EAAaC,UACfT,EAAUQ,EAAaxB,QACvBc,GAAW,KAEXI,EAAgBM,EAAaE,OAC7BZ,GAAW,UAUf,mBAAGzB,UAAU,YAAb,uCACA,qBAAKA,UAAU,SAAf,SACGwB,IAAYI,EACZ,8CACIA,EACH,qBAAK5B,UAAU,eAAf,SAA+B4B,IAE/BF,EAAOY,KAAI,SAACnC,EAAOoC,GAAR,OACT,cAAC,EAAD,CAAuCpC,MAAOA,GAA9C,UAAeoC,EAAf,YAAwBpC,EAAMG,iBC1C3BkC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBV,MAAK,YAAkD,IAA/CW,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.0ad1b8f9.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <header className=\"App-header\">\r\n      <h2>{props.text}</h2>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nconst DEFAULT_PLACEHOLDER_IMAGE =\r\n  \"https://m.media-amazon.com/images/M/MV5BMTczNTI2ODUwOF5BMl5BanBnXkFtZTcwMTU0NTIzMw@@._V1_SX300.jpg\";\r\n\r\n\r\nconst Movie = ({ movie }) => {\r\n  const poster =\r\n    movie.Poster === \"N/A\" ? DEFAULT_PLACEHOLDER_IMAGE : movie.Poster;\r\n  return (\r\n    <div className=\"movie\">\r\n      <h2>{movie.Title}</h2>\r\n      <div>\r\n        <img\r\n          width=\"200\"\r\n          alt={`The movie titled: ${movie.Title}`}\r\n          src={poster}\r\n        />\r\n      </div>\r\n      <p>({movie.Year})</p>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default Movie;","import React, { useState } from \"react\";\r\n\r\n\r\nconst Search = (props) => {\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  \r\n  const handleSearchInputChanges = (e) => {\r\n    setSearchValue(e.target.value);\r\n  }\r\n\r\n  const resetInputField = () => {\r\n    setSearchValue(\"\")\r\n  }\r\n\r\n  const callSearchFunction = (e) => {\r\n    e.preventDefault();\r\n    props.search(searchValue);\r\n    resetInputField();\r\n  }\r\n\r\n  return (\r\n      <form className=\"search\">\r\n        <input\r\n          value={searchValue}\r\n          onChange={handleSearchInputChanges}\r\n          type=\"text\"\r\n        />\r\n        <input onClick={callSearchFunction} type=\"submit\" value=\"SEARCH\" />\r\n      </form>\r\n    );\r\n}\r\n\r\nexport default Search;","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/Header\";\nimport Movie from \"./components/Movie\";\nimport Search from \"./components/Search\";\n\n\nconst MOVIE_API_URL = \"https://www.omdbapi.com/?s=man&apikey=4a3b711b\"; // you should replace this with yours\n\n\nconst App = () => {\n  const [loading, setLoading] = useState(true);\n  const [movies, setMovies] = useState([]);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n    useEffect(() => {\n    fetch(MOVIE_API_URL)\n      .then(response => response.json())\n      .then(jsonResponse => {\n        setMovies(jsonResponse.Search);\n        setLoading(false);\n      });\n  }, []);\n\n    const search = searchValue => {\n    setLoading(true);\n    setErrorMessage(null);\n\n    fetch(`https://www.omdbapi.com/?s=${searchValue}&apikey=4a3b711b`)\n      .then(response => response.json())\n      .then(jsonResponse => {\n        if (jsonResponse.Response === \"True\") {\n          setMovies(jsonResponse.Search);\n          setLoading(false);\n        } else {\n          setErrorMessage(jsonResponse.Error);\n          setLoading(false);\n        }\n      });\n  \t};\n\n    \n    return (\n     <div className=\"App\">\n      <Header text=\"Search your favourite movies\" />\n      <Search search={search} />\n      <p className=\"App-intro\">List will be shown below:</p>\n      <div className=\"movies\">\n        {loading && !errorMessage ? (\n         <span>loading...</span>\n         ) : errorMessage ? (\n          <div className=\"errorMessage\">{errorMessage}</div>\n        ) : (\n          movies.map((movie, index) => (\n            <Movie key={`${index}-${movie.Title}`} movie={movie} />\n          ))\n        )}\n      </div>\n    </div>\n  );\n};\n\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}